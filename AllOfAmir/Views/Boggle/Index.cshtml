@{
    ViewBag.Title = "Index";
}
@section breadcrumbs
{
    <ol class="breadcrumb">
        <li><a href="/">Home</a></li>
        <li><a href="@Url.Action("Professional", "Home")">Professional</a></li>
        <li class="active">Boggle</li>
    </ol>
}

<h2>Boggle!?</h2>

<hr/>

<div class="row">
    <div class="col-sm-6">
        <div>
            <select class="form-control" id="board-size-selector">
                <option value="2" selected>2x2</option>
                <option value="4">4x4</option>
                <option value="6">6x6</option>
            </select>
        </div>
        <div id="board"></div>
        <button type="button" id="solve-button" class="btn">SOLVE!</button>
    </div>
    <div class="col-sm-6">
        <div id="results"></div>
    </div>
</div>

@section scripts{ 
    <script type="text/javascript">
    (function ($, aoa, window, document, undefined) {

        var board_model = [
                ['d', 'g', 'h', 'i'],
                ['k', 'l', 'p', 's'],
                ['y', 'e', 'u', 't'],
                ['e', 'o', 'r', 'n']
        ],
            service_url = "@Url.Action("GetBoggleWords", "Boggle")",
            $boardDiv = $("div#board"),
            $resultsDiv = $("div#results");

        /* for testing only - this should go away eventually */
        $("#solve-button").click(function () {
            aoa.loading();
            $.post({
                url: service_url,
                data: { board: board_model },
                dataType: 'json',
                success: function (data, textStatus, jqXHR) {
                    renderBoggleResults(data);
                },
                error: aoa.ajaxErrorHandler
            }).done(function () {
                aoa.loading(false);
            }).fail(function () {
                aoa.loading(false);
            });
        });

        /*
         * this helper will render the given list of BoggleResult objects on this page
         */
        function renderBoggleResults(results) {
            if (!results) return;

            // first, remove all the previous results
            $resultsDiv.empty();

            // now rifle through the new results and toss-em up on the page
            for (var i = 0, iLen = results.length; i < iLen; i++) {
                var nextResult = results[i],
                    nextCoords = nextResult.Coords,
                    nextWord = nextResult.Word,
                    $nextAnchor = $(document.createElement('a')).addClass("result-word")
                                                                .data('result-word', nextResult)
                                                                .text(nextWord)
                                                                .append( document.createElement('br') )
                                                                .appendTo($resultsDiv);
            }
        }

        /*
         * helper that renders the given 2D board of characters to the page
         */
        function renderBoard(board) {
            for (var i = 0; i < board.length; i++) {
                var $boardRow = $(document.createElement("div")).addClass("board-row");
                for (var j = 0; j < board[i].length; j++) {
                    $(document.createElement("div")).attr("id", "row" + i + "col" + j)
                                                    .addClass("board-cell")
                                                    .text(board[i][j] + "")
                                                    .appendTo($boardRow);
                }

                $boardRow.appendTo($boardDiv);
            }
        }

        /*
         * helper that will clear all hovered/displayed words on the page
         */
        function clearAllHoverEffects() {
            $boardDiv.find(".board-cell-hover").removeClass("board-cell-hover");
        }

        // any time the user hovers their mouse over a 'word' in the result
        // list, we should highlight that word in the board.  just bind
        // this listener to the parent div and catch only the targets we
        // care about.
        $resultsDiv.mouseover(function (e) {
            var target = e.target;
            if (!target) return;

            var $target = $(target);

            // if this isn't a result word that's being hovered on, we don't care
            if (!$target.hasClass('result-word')) return;

            // each result should have a BoggleResult in it's data cache.
            // if it's not there, halt!
            var targetData = $target.data('result-word');
            if (!targetData) return;

            // now that we've got the BoggleResult associated to the word
            // that the user has hovered on, we need to highlight it in the
            // board!  first, make sure nothing else is highlighted right now
            clearAllHoverEffects();

            // now iterate on this BoggleResult's coordinates and highlight
            // the corresponding cells in the board/dom
            for (var i = 0, iLen = targetData.Coords.length; i < iLen; i++) {
                var nextCoord = targetData.Coords[i];
                $boardDiv.find("div#row" + nextCoord.Row + "col" + nextCoord.Col).addClass("board-cell-hover");
            }

        }).mouseout(function (e) {

            // and when the user's mouse exits the result list, just clear any 
            // displayed results
            clearAllHoverEffects();
        });

        // now render our board, so the user actually sees something!
        renderBoard(board_model);

    })(jQuery, aoa, window, document);
    </script>
}